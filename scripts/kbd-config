#! /bin/bash

lock="/tmp/kbd-config-done"

if [[ -e "$lock" ]]; then
  echo "Keyboard is already modded!"
  echo ""
  echo "  if you really want to run again; delete $lock"
  echo ""
  exit 1
fi

# Make Caps_Lock into Escape; mapping Shift+Caps_Lock to the
# traditional behavior
xmodmap -e "clear lock"
xmodmap -e "keycode 66 = Escape Caps_Lock"

# Swap Left Alt and Left Control
xmodmap -e "clear mod1"
xmodmap -e "clear mod4"
xmodmap -e "clear control"
xmodmap -e "keycode 64  = Control_L"
xmodmap -e "keycode 37  = Alt_L Meta_L"
xmodmap -e "add control = Control_L Control_R"
xmodmap -e "add mod1    = Alt_L Meta_L"

# Add Alt_R to mod4 group so xmonad intercepts it nicely
xmodmap -e "add mod4    = Alt_R Super_L Super_R"

# Addapted from xcape manual.

# Map an unused modifier's keysym to the return's keycode and make it a
# control modifier. It needs to be an existing key so that emacs won't
# spazz out when you press it. Hyper_L is a good candidate.
spare_modifier="Hyper_L"
xmodmap -e "keycode 36 = $spare_modifier"
xmodmap -e "remove mod4 = $spare_modifier" # hyper_l is mod4 by default
xmodmap -e "add Control = $spare_modifier"

# Map "Return" to an unused keycode (to keep it around for xcape to
# use).
xmodmap -e "keycode 250 = Return"

# Finally use xcape to cause the enter to generate an enter when tapped.
xcape -e "$spare_modifier=Return"

date +%d%m-%H%M > "$lock"
